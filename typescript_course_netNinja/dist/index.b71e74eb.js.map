{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-e4a324b29ebcef4e.js","src/index.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/* \r\n\r\n// INTRODUCTION TO TYPESCRIPT\r\n\r\n// install typescript: npm install -g typescript\r\n\r\n\r\nlet age = 30;\r\nconsole.log(age);\r\n// even if this look like javascript, you won't be able to change a number into a string later.\r\n// to run it you need to complite it first: tsc index.ts\r\n// this will create a new file index.js\r\n\r\n// you can your console.log in the terminal with: node index.js\r\n\r\nlet age2: number = 30;\r\nage2 = '30'; // this will give you an error\r\n\r\nlet firstName: string = 'Mario';\r\nlet isFictional: boolean\r\n\r\nage = 31\r\nfirstName = 'Luigi'\r\nisFictional = true\r\n\r\n// you can also use type inference\r\n\r\nlet planet = 'Earth'\r\nlet moon = 1\r\nlet isLarge = false\r\n\r\n// in all this cases you see directly the type of the variable, just hovering over it\r\n\r\nplanet = 'Mars'\r\nmoon = 2\r\nisLarge = true\r\n\r\n// null and undefined\r\n// when we give something a value of null we're intentionally saying that it's empty\r\n// undefined is something unintentionally empty\r\n\r\nlet something: null \r\nlet anotherThing: undefined\r\n\r\nsomething = 10 // this will give you an error, it can be only null\r\nanotherThing = 10 // this will give you an error, it can be only undefined\r\n\r\n// AUTOMATE COMPILER IN TYPESCRIPT & WATCH FOR CHANGES\r\n\r\n// install typescript: npm install -g typescript\r\n// run tsc --init to create a tsconfig.json file\r\n// look for \"rootDir\" & \"outDir\" and uncomment them. this specify where the compiler should look for the files and where to put the compiled files\r\n// change in this way -> \"rootDir\": \"./src\"\r\n// and this way -> \"outDir\": \"./dist\"\r\n// then create a new folder src and move index.ts inside it\r\n// create a new folder dist\r\n// run tsc -w to watch for changes in the files and compile them automatically\r\n// look for \"rootDir\" & \"outDir\" and uncomment them. this specify where the compiler should look for the files and where to put the compiled files\r\n// change in this way -> \"rootDir\": \"./src\"\r\n// and this way -> \"outDir\": \"./dist\"\r\n// then create a new folder src and move index.ts inside it\r\n// create a new folder dist\r\n// run tsc -w to watch for changes in the files and compile them automatically\r\n// don't close the terminal, name it and open a new one\r\n// run node --watch dist/index.js to watch for changes in the compiled file and run it automatically in the terminal -> everything you console.log will be printed in the terminal\r\n// don't close the terminal, name it and open a new one\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n// ARRAYS\r\n\r\nlet names: string[] = ['Mario', 'Luigi', 'Peach'] // if you try to add a number you will get an error\r\nlet ages: number[] = [30, 31, 32] // if you try to add a string you will get an error\r\n\r\nnames.push('Toad') // this will work\r\nages.push('33') // this will give you an error\r\nages.push(33) // this will work\r\n\r\nlet fruits = ['Apple', 'Banana', 'Orange'] // this will be an array of strings\r\nfruits.push(10) // this will give you an error\r\nfruits.push('peaches') // this will work\r\n\r\nconst f = fruits[3] // this will be a string\r\n\r\nlet things = [1, true, 'hello'] // this will be an array of any type you inserted so it can be a number, a boolean or a string\r\n\r\nconst t = things[2] // the value will be a string, however you can change it to a number or a boolean\r\n\r\n//OBJECTS\r\n\r\nlet user: {firstName: string, age: number, id: number} = {firstName: 'Mario', age: 30, id: 1} // this will be an object with firstName, age and id as properties\r\n// if you try to add a property that is not in the object you will get an error -> isFictional: true\r\n\r\nuser.firstName = 'Luigi' // this will work\r\nuser.email = 'test@gmail.com' // this will give you an error, because email is not a property of the object\r\nuser.id = 2 // this will work\r\n\r\nlet person = {name: 'Luigi', score: 35}\r\nperson.name = true // this won't work because name is a string\r\nperson.score = '35' // this won't work because score is a number\r\nperson.id = 1 // this won't work because id is not a property of the object\r\n\r\nconst score = person.score // this will be a number\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n// FUNCTIONS\r\n\r\nfunction addTwoNumbers(a, b) {\r\n    return a + b\r\n} // as you can see you get the \"a\" and \"b\" highlighted because you have to specify the type of the parameters\r\n\r\n\r\nfunction addTwoNumbers2(a: number, b: number) {\r\n    return a + b\r\n} // this will work\r\n\r\nconst subtrcatTwoNumbers = (a: number, b: number) :number => {\r\n    return a - b\r\n} // this will work\r\n\r\n \r\nconsole.log(addTwoNumbers2(10, 20))\r\n\r\nconsole.log(subtrcatTwoNumbers(10, 20))\r\n\r\nfunction addAllNumbers(items: number[]) {\r\n    const total = items.reduce((a, b) => a + b, 0)\r\n    console.log(total)\r\n}\r\n\r\naddAllNumbers([10, 20, 30]) \r\n//:void is a type annotation used to specify that a function does not return any value.\r\n\r\n\r\n// FUNCTION SIGNATURES\r\n\r\ntype Calculator = (numOne: number, numTwo: number) => number // this is a function signature\r\n// when you create function signatures you can have as many arguments as you want.\r\n\r\nfunction addTwoNumbers(a: number, b: number): number {\r\n    return a + b\r\n}\r\n\r\nfunction multiplyTwoNumbers(a: number, b: number): number {\r\n    return a * b\r\n}\r\n\r\nfunction squareNumber(num: number): number {\r\n    return num * num\r\n}\r\n\r\nfunction joinTwoNumbers(a: number, b: number){\r\n    return `${a}${b}` // this will be a string\r\n}\r\n\r\nlet calcs: Calculator[] = []\r\n\r\ncalcs.push(addTwoNumbers)\r\ncalcs.push(multiplyTwoNumbers)\r\ncalcs.push(squareNumber)\r\ncalcs.push(joinTwoNumbers) // this will give you an error because joinTwoNumbers doesn't match the function signature\r\n\r\n// FUNCTION SIGNATURES ON INTERFACES\r\n\r\ninterface HasArea {\r\n    name: string\r\n    calcArea: (a: number) => number\r\n}\r\n\r\nconst shapeOne: HasArea = {\r\nname : 'square',\r\ncalcArea:(l:number) => {\r\n    return l *1\r\n    }\r\n}\r\n\r\nconsole.log(shapeOne.calcArea(10))\r\n\r\n\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//ANY TYPE\r\n\r\n// this can be any type and change.\r\n\r\nlet age:any = 30\r\nage = '30'\r\nage = true\r\n\r\nlet title // this will be automatically any type\r\n\r\ntitle = 10\r\ntitle = '10'\r\n\r\nlet things :any [] = ['hello', 10, true]  // this will be an array of any type\r\n\r\nfunction addTogether(value:any):any {\r\n    return value + value\r\n}\r\n\r\nconst resultOne = addTogether(10) // this will be any type\r\n//expect -> resultOne = 20\r\n\r\n// this functionality can be really useful when you're migrating from javascript to typescript and you don't want to specify the type of every variable\r\n// because you won't have to change the type of every variable in your code\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//TUPLES\r\n\r\n//tuples is like an array but you have specify the type of every element and follow the order\r\n\r\nlet person: [string, number, boolean] = ['Mario', 30, true]\r\n// if you try to change the type of one of the elements you will get an error\r\n\r\nlet hsla: [number,string,string,number]\r\nhsla = [200, '100%', '50%', 1]\r\n\r\nlet xy: [number, number]\r\nxy = [10, 20]\r\n\r\nfunction useCoords(): [number, number] {\r\n\r\n    const lat = 100\r\n    const long = 50\r\n\r\n    return  [lat, long]\r\n}\r\n\r\nconst [lat, long] = useCoords() // this will be a number\r\n\r\nlet user: [name: string,age: number]\r\n\r\nuser = ['Mario', 30]\r\nconsole.log(user) \r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//INTERFACES\r\n// interfaces are used to define the structure of an object\r\n// with interfaces you have to named them with an uppercase letter\r\n\r\ninterface Author {\r\n    firstName: string,\r\n    lastName: string,\r\n    age: number,\r\n    isFictional: boolean\r\n}\r\n\r\nconst authorOne: Author = {\r\n    firstName: 'Mario',\r\n    lastName: 'Rossi',\r\n    age: 30,\r\n    isFictional: true\r\n}\r\n\r\ninterface Post{\r\n    title: string,\r\n    body: string,\r\n    tags: string[],\r\n    create_at: Date,\r\n    author: Author\r\n}\r\n\r\nconst newPost: Post = {\r\n    title: 'My first post',\r\n    body: 'This is my first post',\r\n    tags: ['first', 'post'],\r\n    create_at: new Date(),\r\n    author: authorOne\r\n}\r\n\r\n\r\nfunction createPost(post: Post):void {\r\n    console.log(`created post ${post.title} by ${post.author.firstName} ${post.author.lastName}`)\r\n}\r\n\r\ncreatePost(newPost)\r\n\r\nlet posts: Post[] = []\r\n\r\nposts.push(newPost)\r\n\r\n\r\n\r\n//REAUSABLE INTERFACES\r\n\r\ninterface hasQuantity{\r\n    quantity: number\r\n}\r\n\r\nconst something: hasQuantity = { quantity: 10 }\r\n\r\nfunction printQuantity(item: hasQuantity):void {\r\n    console.log(item.quantity)\r\n}\r\n\r\nconst book = {\r\n    title: 'Harry Potter',\r\n    quantity: 20\r\n}\r\n\r\nprintQuantity(book) // this will work\r\n\r\nconst person = {\r\n    name: 'Mario',\r\n    age: 30\r\n}\r\n\r\nprintQuantity(person) // this will give you an error because person doesn't have a quantity property\r\n\r\nprintQuantity({quantity: 15}) // this will work\r\nprintQuantity({quantity: 15, name: 'Pep') // this won't work, be careful!\r\n\r\n\r\n\r\n\r\n// Extending interfaces\r\n\r\ninterface hasformatter{\r\n    format(): string\r\n}\r\n\r\ninterface bill extends hasformatter{\r\n    id: string|number,\r\n    amount: number,\r\n    server: string,\r\n}\r\n\r\nconst user = {\r\n\r\n    id: 1,\r\n    format(): string {\r\n        return `user ${this.id}`\r\n    \r\n    }\r\n}\r\n\r\nconst bill = {\r\n    id: 1,\r\n    amount: 200,\r\n    server: 'Mario',\r\n    format(): string {\r\n        return `Bill ${this.id} is ${this.amount} and was served by ${this.server}`\r\n    }\r\n}\r\n\r\nfunction printFormatted(item: hasformatter): void {\r\n    console.log(item.format())\r\n}\r\n\r\nprintFormatted(user)\r\nprintFormatted(bill)\r\n\r\n\r\n\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//TYPE ALIAS\r\n// type alias are used to create a new name for a type\r\n\r\ntype Rgb = [number, number, number] \r\n\r\nfunction getRandColor(): Rgb {\r\n    const r = Math.floor(Math.random() * 255)\r\n    const g = Math.floor(Math.random() * 255)\r\n    const b = Math.floor(Math.random() * 255)\r\n\r\n    return [r, g, b]\r\n}\r\n\r\nconst colorOne = getRandColor()\r\nconst colorTwo = getRandColor()\r\nconsole.log(colorOne, colorTwo)\r\n\r\ntype User = {\r\n    name: string,\r\n    score: number,\r\n    age: number,\r\n}\r\n\r\nconst userOne: User = {\r\n    name: 'Mario',\r\n    score: 75,\r\n    age: 45,\r\n}\r\n\r\nfunction formatUser(user: User): void {\r\n    console.log(`${user.name} has a score of ${user.score} and is ${user.age} years old`)\r\n}\r\n\r\nformatUser(userOne)\r\nformatUser({name: 'Luigi', score: 80, age: 40})\r\n\r\n\r\n\r\n// EXTENDING TYPE ALIASES\r\n\r\ntype Person = {\r\n    id: string | number,\r\n    name: string,\r\n}\r\n\r\ntype User = Person & {\r\n    email: string,\r\n}\r\n\r\nconst personOne = {\r\n    id: 1,\r\n    name: 'Mario',\r\n}\r\n\r\nconst personTwo :User = {\r\n    id: '2',\r\n    name: 'Luigi',\r\n    email: 'lui@gmail.com'\r\n}\r\n\r\nconst personThree = {\r\n    email: 'ttt@gmail.com'\r\n}\r\n\r\nfunction printUser (user: User){\r\n    console.log(user.id, user.name, user.email)\r\n}\r\n\r\nprintUser(personOne) // this will give you an error because personOne doesn't have an email property\r\nprintUser(personTwo) // this will work\r\nprintUser(personThree) // this will give you an error because personThree doesn't have an id and name property\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//UNIONS TYPES\r\n\r\nlet someid: number | string // this will be a number or a string\r\n\r\nsomeid = 10\r\nsomeid = '10'\r\n\r\nlet email: string | null    // this will be a string or null\r\n\r\nemail = null\r\nemail = 'example.gmail.com'\r\n\r\ntype Id = number | string\r\n\r\nlet anotherId : Id\r\n\r\nanotherId = 105532\r\nanotherId = '10fajkgjl'\r\n\r\n\r\nfunction swapIdType1(id: Id) :Id {\r\n   \r\n    // can only use props and methods common to both number strings types\r\n    // parseInd(id) -> not allowed\r\n\r\n\r\n}\r\n\r\n// TYPE GUARDS\r\n// type guards are used to check the type of a variable\r\n\r\nfunction swapIdType(id: Id) :Id {\r\n    if(typeof id === 'string') {\r\n        return parseInt(id)\r\n    } else {\r\n        return id.toString()\r\n    }\r\n}\r\n\r\nconst idOne = swapIdType(1099)\r\nconst idTwo = swapIdType('1055')\r\n\r\nconsole.log(idOne, idTwo)\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n// CLASSES\r\n\r\ntype Base = 'classic' | 'thick' | 'thin' | 'garlic'\r\n\r\n \r\n\r\nclass Pizza {\r\n\tconstructor(title: string, price: number) {\r\n\t\tthis.title = title\r\n\t\tthis.price = price\r\n\t}\r\n\r\n\ttitle: string\r\n\tprice: number\r\n\tbase: Base = 'classic'\r\n\ttoppings: string[] = []\r\n\r\n\taddTopping(topping: string): void {\r\n\t\tthis.toppings.push(topping)\r\n\t}\r\n\tremoveTopping(topping: string): void {\r\n\t\tthis.toppings = this.toppings.filter((t) => t !== topping)\r\n\t}\r\n\tselectBase(b: Base): void {\r\n\t\tthis.base = b\r\n\t}\r\n}\r\n\r\n\r\nclass Pizza {\r\n\tconstructor(private title: string, private price: number) {}\r\n    // a constrctur is a function that runs when you create a new instance of a class\r\n\r\n\t// title: string\r\n\t// price: number\r\n\tprivate base: Base = 'classic'\r\n\tprivate toppings: string[] = [] \r\n    // this will be private and you won't be able to access it from outside the class\r\n    // but you can change it with the function below\r\n\r\n    // public , instead is the default access modifier\r\n\r\n\taddTopping(topping: string): void {\r\n\t\tthis.toppings.push(topping)\r\n\t}\r\n\tremoveTopping(topping: string): void {\r\n\t\tthis.toppings = this.toppings.filter((t) => t !== topping)\r\n\t}\r\n\tselectBase(b: Base): void {\r\n\t\tthis.base = b\r\n\t}\r\n}\r\n\r\n\r\n// INHERITANCE\r\n\r\ninterface hasFormatter {\r\n    format(): string\r\n}\r\n\r\nclass MenuItem implements hasFormatter {\r\n\tconstructor(private title: string, private price: number) {}\r\n\r\n\tget details(): string {\r\n\t\treturn `${this.title} - £${this.price}`\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn `This menu item is called ${this.title} and is £${this.price}`\r\n\t}\r\n}\r\n\r\nclass Pizza extends MenuItem {\r\n\tconstructor(title: string, price: number) {\r\n\t\tsuper(title, price)\r\n\t} // by using extends you can inherit the properties and methods of another class\r\n\r\n\tprivate base: Base = 'classic'\r\n\tprivate toppings: string[] = []\r\n\r\n\taddTopping(topping: string): void {\r\n\t\tthis.toppings.push(topping)\r\n\t}\r\n\tremoveTopping(topping: string): void {\r\n\t\tthis.toppings = this.toppings.filter((t) => t !== topping)\r\n\t}\r\n\tselectBase(b: Base): void {\r\n\t\tthis.base = b\r\n\t}\r\n}\r\n\r\n\r\nconst pizza = new Pizza('mario special', 15)\r\n\r\npizza.selectBase('garlic')\r\npizza.addTopping('mushrooms')\r\npizza.addTopping('olives')\r\n\r\nconsole.log(pizza)\r\n\r\nfunction printFormatted(val: hasFormatter): void {\r\n\tconsole.log(val.format())\r\n}\r\n\r\nprintFormatted(pizza)\r\n\r\n// Abstract classes\r\n\r\n// is a class that can have properties and methods and can be herited from other classes, that can never be used\r\n// to make a new instance of that class itself\r\n\r\n// CSV Writer project -> take objects and turn them into a downloadable csv file\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n// GENERICS\r\n\r\n//generics are used to create reusable components wheater it is a function or a class.\r\n// they allow us to create components that can work over a variety of types rather than a single one\r\n\r\nfunction logAndReturnString(val: string): string {\r\n\tconsole.log(val)\r\n\treturn val\r\n}\r\nfunction logAndReturnNumber(val: number): number {\r\n\tconsole.log(val)\r\n\treturn val\r\n}\r\nfunction logAndReturnBoolean(val: boolean): boolean {\r\n\tconsole.log(val)\r\n\treturn val\r\n}\r\n\r\nfunction logAndReturnValue<T>(val: T): T {\r\n\tconsole.log(val)\r\n\treturn val\r\n} // this is a generic function\r\n// T stands for type, it represents the type of the value that we pass in\r\n// you can call it whatever you want, but T is the convention\r\n\r\nconst resultOne = logAndReturnValue<string>('mario')\r\nconst resultTwo = logAndReturnValue<number>(25)\r\n\r\n// example 2\r\n\r\nfunction getRandomArrayValue<T>(values: T[]): T {\r\n\tconst i = Math.floor(Math.random() * values.length)\r\n\r\n\treturn values[i]\r\n}\r\n\r\ninterface User {\r\n\tname: string\r\n\tscore: number\r\n}\r\n\r\nconst users: User[] = [\r\n\t{ name: 'mario', score: 100 },\r\n\t{ name: 'peach', score: 150 },\r\n\t{ name: 'wario', score: 75 },\r\n\t{ name: 'yoshi', score: 90 },\r\n]\r\n\r\nconst randomUser = getRandomArrayValue<User>(users)\r\nconsole.log(randomUser.name)\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------------\r\n\r\n//-------------------\r\n// Intersection Type\r\n//-------------------\r\n\r\ntype Person = {\r\n\tfirstName: string\r\n\tid: number\r\n}\r\n\r\ntype User = Person & {\r\n\temail: string\r\n}\r\n\r\n// example with generic function\r\n\r\nfunction addIdToValue<T>(val: T): T & HasID { // this is an intersection type\r\n\tconst id = Math.random() \r\n\r\n\treturn { ...val, id }\r\n}\r\n\r\ninterface Post {\r\n\ttitle: string\r\n\tthumbsUp: number\r\n}\r\n\r\ninterface HasID {\r\n\tid: number\r\n}\r\n\r\nconst post = addIdToValue<Post>({ title: 'Marmite Rules', thumbsUp: 250 })\r\nconsole.log(post.id, post.title, post.thumbsUp)\r\n\r\n*/\r\n\r\n"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}